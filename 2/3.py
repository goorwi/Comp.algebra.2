from collections import Counter

russian_frequencies = "_оеаинрстлвпдмкьяфуыбйгзъшжчцхющэл"

ciphertext = ("я_рчюмжтучсю_ютжч_ужыьъюэчжчяюхфучрчя_рчюмжтучыж_юкуырчв_ж"
              "эиохмбрачяюттжээпачжэножэч_юммрэьюыьч_жмкрв_юежычяу_угежйуээ"
              "пучмююзщуэрцчрчнуъчмжъпъчяюъюсчяюзутрньчж_ърлчсосуэюнюечяюм"
              "ыучяюзутпчя_жернуыьмнеючв_жэиррчэумбюыьбюч_жхчя_реыубжырчус"
              "ючбч_жмкрв_юебучкрв_юечяюмыучмъу_нрч_юммрэьюыцчусючмпэчзюэ"
              "жеуэно_ч_юммрэьюыьчжчяюхфучрчеэобчжэножэч_юммрэьюыьчя_ютюы"
              "фрырчусючтуыючечнюче_уъцчя_жернуыьмнеючв_жэиррчя_реыубжыючб"
              "ч_жзюнучъэюфумнеючб_рянюс_жвюечбюню_пучеъумнучюз_жхюепежыр"
              "чнжбчэжхпежуъпачйу_эпачбжзрэунчжэножэоч_юммрэьюылчя_рэжтыуфр"
              "нчтюбн_рэжчмюсыжмэючбюню_юачмнюабюмньчкрв_жчтюыфэжчюя_уту"
              "ыцньмцчертюъчхжкрв_юежээюачрэвю_ъжиррчтыцчеюуээюсюче_уъуэрчт"
              "юмнжнюйэюачзотунчцеыцньмцчмнюабюмньчумырчмююзщуэручмчя_рб"
              "жхюъчж_ъуамбюъочяют_жхтуыуэрлчэучзотунч_жмкрв_юежэючя_юнреэр"
              "бюъчгюнцчзпчтючъюъуэнжчрмяюыэуэрцчяюыойжнуыуъчжчтыцчтряыюъж"
              "нрйумбюачяюйнпчкрв_чтюыфуэчюзумяуйрежньчмюг_жээюмньчэжчтумц"
              "нбрчыун")

ciphertext_freq = Counter(ciphertext)

sorted_ciphertext_freq = sorted(ciphertext_freq.items(), key=lambda item: item[1], reverse=True)
substitution_map = {cipher[0]: russian[0] for cipher, russian in zip(sorted_ciphertext_freq, russian_frequencies)}

decrypted_text = ''.join([substitution_map.get(char, char) for char in ciphertext])

print("Исходный текст: ", ciphertext)
print("Таблица замен:", substitution_map)
print("Расшифрованный текст:")
print(decrypted_text)